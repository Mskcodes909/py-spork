import pandas as pd

def find_ids_within_ten_percentage_threshold(input_df, reference_value):
    # Filter DataFrame for rows with the specified reference value
    reference_rows = input_df[input_df['id_start'] == reference_value]

    # Calculate the average distance for the reference value
    reference_avg_distance = reference_rows['distance'].mean()

    # Calculate the threshold for 10% of the average distance
    threshold = 0.1 * reference_avg_distance

    # Filter rows that lie within 10% of the reference value's average distance
    filtered_rows = input_df[
        (input_df['id_start'] != reference_value) & 
        (input_df['distance'] >= (reference_avg_distance - threshold)) &
        (input_df['distance'] <= (reference_avg_distance + threshold))
    ]

    # Get unique values from the filtered rows and sort them
    result_ids = sorted(filtered_rows['id_start'].unique())

    return result_ids

# Example usage
# Assuming 'result_unrolled_di
